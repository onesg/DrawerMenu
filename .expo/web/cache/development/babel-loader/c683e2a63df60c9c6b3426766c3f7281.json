{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\react\\\\DrawerMenu\\\\App.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\n\nfunction App() {\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    }\n  }, \"Tela inicial do App\"));\n}\n\nfunction AppTwo() {\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    }\n  }, \"Tela 2\"));\n}\n\nvar Drawer = createDrawerNavigator();\nexport default function Menu() {\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    }\n  }, React.createElement(Drawer.Navigator, {\n    initialRouteName: \"App\",\n    drawerStyle: {\n      backgroundColor: \"#261329\",\n      paddingVertical: 20\n    },\n    drawerContentOptions: {\n      activeBackgroundColor: \"#f5d393\",\n      inactiveTintColor: \"#f39772\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"App\",\n    component: App,\n    options: {\n      drawerLabel: function drawerLabel(_ref) {\n        var focused = _ref.focused;\n        return React.createElement(Text, {\n          style: {\n            color: focused ? '#313131' : '#fff'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          }\n        }, \"Tela Principal\");\n      },\n      drawerIcon: function drawerIcon(_ref2) {\n        var focused = _ref2.focused;\n        return React.createElement(Icon, {\n          color: focused ? '#313131' : '#fff',\n          name: \"home\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"MeuApp\",\n    component: AppTwo,\n    options: {\n      drawerLabel: function drawerLabel(_ref3) {\n        var focused = _ref3.focused;\n        return React.createElement(Text, {\n          style: {\n            color: focused ? '#313131' : '#fff'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          }\n        }, \"Tela Secund\\xE1ria\");\n      },\n      drawerIcon: function drawerIcon(_ref4) {\n        var focused = _ref4.focused;\n        return React.createElement(Icon, {\n          color: focused ? '#313131' : '#fff',\n          name: \"chat\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5d393',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/workspace/react/DrawerMenu/App.js"],"names":["React","Icon","NavigationContainer","createDrawerNavigator","App","styles","container","AppTwo","Drawer","Menu","backgroundColor","paddingVertical","activeBackgroundColor","inactiveTintColor","drawerLabel","focused","color","drawerIcon","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/MaterialIcons';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\n\r\n//  TELA PRINCIPAL\r\nfunction App() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Tela inicial do App</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\n//  SEGUNDA TELA\r\nfunction AppTwo() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Tela 2</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nexport default function Menu(){\r\n  return(\r\n    <NavigationContainer>\r\n      <Drawer.Navigator \r\n        initialRouteName=\"App\"\r\n        drawerStyle={{\r\n          backgroundColor: \"#261329\",\r\n          paddingVertical: 20\r\n        }}\r\n        drawerContentOptions={{\r\n          activeBackgroundColor: \"#f5d393\",\r\n          inactiveTintColor: \"#f39772\"\r\n        }}>\r\n\r\n          \r\n        <Drawer.Screen \r\n            name=\"App\" \r\n            component={App} \r\n            options={\r\n              {\r\n                drawerLabel: (({focused}) => <Text style={{color: focused ? '#313131' : '#fff' }}>Tela Principal</Text>),\r\n                drawerIcon: (({focused}) => <Icon color={focused ? '#313131' : '#fff' } name=\"home\" />)\r\n              }\r\n            } \r\n        />\r\n        <Drawer.Screen \r\n          name=\"MeuApp\" \r\n          component={AppTwo} \r\n          options={\r\n            {\r\n              drawerLabel: (({focused}) => <Text style={{color: focused ? '#313131' : '#fff' }}>Tela Secund√°ria</Text>),\r\n              drawerIcon: (({focused}) => <Icon color={focused ? '#313131' : '#fff' } name=\"chat\" />)\r\n            }\r\n          }\r\n         \r\n          />\r\n      </Drawer.Navigator>\r\n    </NavigationContainer>\r\n  )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5d393',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}